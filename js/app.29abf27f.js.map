{"version":3,"file":"js/app.29abf27f.js","mappings":"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","sources":["webpack://block-blast/./src/App.vue","webpack://block-blast/./src/components/GameBoard.vue","webpack://block-blast/./src/components/Block.vue","webpack://block-blast/./src/components/Block.vue?92b4","webpack://block-blast/./src/components/CustomPieceCreator.vue","webpack://block-blast/./src/components/CustomPieceCreator.vue?1be7","webpack://block-blast/./src/components/GameBoard.vue?b7d7","webpack://block-blast/./src/App.vue?7ccd","webpack://block-blast/./src/main.js","webpack://block-blast/webpack/bootstrap","webpack://block-blast/webpack/runtime/chunk loaded","webpack://block-blast/webpack/runtime/compat get default export","webpack://block-blast/webpack/runtime/define property getters","webpack://block-blast/webpack/runtime/global","webpack://block-blast/webpack/runtime/hasOwnProperty shorthand","webpack://block-blast/webpack/runtime/jsonp chunk loading","webpack://block-blast/webpack/startup"],"sourcesContent":["<template>\n  <GameBoard />\n</template>\n\n<script>\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #fff;\n}\n</style>\n","<template>\n    <div class=\"game-board\">\n        <div class=\"title\">Block Blast!</div>\n        <div class=\"score-board\">\n            <div class=\"high-score\">High Score: {{ highScore }}</div>\n            <div class=\"score\" :class=\"{ highlight: isHighScoreAnimated }\">{{ scoreDisplay }}</div>\n        </div>\n        <!-- Add your game board elements here -->\n        <div class=\"grid\" @dragover.prevent=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\">\n            <div class=\"row\" v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\">\n                <div class=\"cell\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"\n                    :class=\"{ 'filled-cell': block, 'hover-cell': isHoverCell(rowIndex, blockIndex) }\"\n                    :style=\"applyCellStyle(block)\">\n                </div>\n            </div>\n        </div>\n        <div class=\"shape-selection\">\n            <div v-for=\"(shape, index) in currentShapes\" :key=\"index\">\n                <Block :shape=\"shapes[shape]\" :name=\"shape\" :index=\"index\" @shapeClicked=\"handleShapeClicked\"\n                    @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n            </div>\n        </div>\n\n        <div v-if=\"gameOver\" class=\"game-over-overlay\">\n            <div class=\"game-over-message\">Game Over!</div>\n            <button @click=\"resetBoard\" class=\"restart-button\">Restart</button>\n            <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        </div>\n\n        <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        <button @click=\"openCustomPieceCreator\" class=\"create-piece-button\">Create Your Custom Piece</button>\n\n        <CustomPieceCreator :visible=\"isCustomPieceCreatorVisible\" @save=\"handleCustomPieceSave\" @cancel=\"handleCustomPieceCancel\" />\n\n    </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\nimport CustomPieceCreator from './CustomPieceCreator.vue';\n\nimport './GameBoard.css';\nexport default {\n    components: { Block, CustomPieceCreator },\n    name: 'GameBoard',\n    data() {\n        return {\n            board: Array.from({ length: 8 }, () => Array(8).fill(null)),\n            shapes: {\n                square: [\n                    [1, 1],\n                    [1, 1]\n                ],\n                line: [\n                    [1, 1, 1, 1]\n                ],\n                line2: [\n                    [1],\n                    [1],\n                    [1],\n                    [1]\n                ],\n                t: [\n                    [1, 1, 1],\n                    [0, 1, 0]\n                ],\n                t2: [\n                    [1, 0],\n                    [1, 1],\n                    [1, 0]\n                ],\n                t3: [\n                    [0, 1, 0],\n                    [1, 1, 1]\n                ],\n                t4: [\n                    [0, 1],\n                    [1, 1],\n                    [0, 1]\n                ],\n                single: [\n                    [1]\n                ],\n                l: [\n                    [1, 0],\n                    [1, 0],\n                    [1, 1]\n                ],\n                l2: [\n                    [1, 1],\n                    [0, 1],\n                    [0, 1]\n                ],\n                l3: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 0]\n                ],\n                l4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                ],\n                l5: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                ],\n                j: [\n                    [0, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                s: [\n                    [0, 1, 1],\n                    [1, 1, 0]\n                ],\n                z: [\n                    [1, 1, 0],\n                    [0, 1, 1]\n                ],\n                bCorner: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                    [1, 0, 0]\n                ],\n                bCorner2: [\n                    [0, 0, 1],\n                    [0, 0, 1],\n                    [1, 1, 1]\n                ],\n                bCorner3: [\n                    [1, 0, 0],\n                    [1, 0, 0],\n                    [1, 1, 1]\n                ],\n                bCorner4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                    [0, 0, 1]\n                ],\n                bSquare: [\n                    [1, 1, 1],\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle: [\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle2: [\n                    [1, 1],\n                    [1, 1],\n                    [1, 1]\n                ],\n                corner: [\n                    [1, 1],\n                    [0, 1]\n                ],\n                corner2: [\n                    [1, 0],\n                    [1, 1]\n                ],\n                corner3: [\n                    [0, 1],\n                    [1, 1]\n                ],\n                corner4: [\n                    [1, 1],\n                    [1, 0]\n                ],\n                u: [\n                    [1, 0, 1],\n                    [1, 1, 1]\n                ],\n                u2: [\n                    [1, 1, 1],\n                    [1, 0, 1]\n                ],\n                u3: [\n                    [1, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                u4: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 1]\n                ],\n\n            },\n            currentShapes: [],\n            selectedShape: '',\n            selectedShapeColor: '',\n            gameOver: false,\n            score: 0,\n            scoreDisplay: 0,\n            highScore: 0,\n            isHighScoreAnimated: false,\n            hoverCells: [],\n            history: [], // Add history array\n            isCustomPieceCreatorVisible: false, // Add visibility state for custom piece creator\n        };\n    },\n    watch: {\n        score(newValue, oldValue) {\n            this.incrementScoreDisplay(newValue, oldValue);\n            if (newValue > this.highScore) {\n                this.animateHighScore();\n            }\n        }\n    },\n    methods: {\n        incrementScoreDisplay(newValue, oldValue) {\n            if (newValue > oldValue) {\n                let increment = 1;\n                if (newValue - oldValue > 50) {\n                    increment = 10;\n                } else if (newValue - oldValue > 10) {\n                    increment = 5;\n                }\n                const interval = setInterval(() => {\n                    this.scoreDisplay += increment;\n                    if (this.scoreDisplay >= this.score) {\n                        this.scoreDisplay = this.score;\n                        clearInterval(interval);\n                    }\n                }, 1);\n            }else{\n                this.scoreDisplay = this.score;\n            }\n        },\n        animateHighScore() {\n            this.isHighScoreAnimated = true;\n            setTimeout(() => {\n                this.isHighScoreAnimated = false;\n            }, 1000); // Duration of the animation\n        },\n        resetBoard() {\n            this.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n            this.getRandomShapes();\n            this.gameOver = false;\n            this.highScore = Math.max(this.highScore, this.score);\n            localStorage.setItem('highScore', this.highScore);\n            this.score = 0;\n            this.history = []; // Clear history on reset\n        },\n        addShape(shape, row, col) {\n            if (this.checkCollision(shape, row, col))\n                return;\n            this.saveState(); // Save the current state before adding the shape\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.board[row + i][col + j] = this.selectedShapeColor;\n                        this.score += 1;\n                    }\n                }\n            }\n            this.removeShape(this.selectedShape);\n            setTimeout(() => {\n                this.checkRows();\n                this.checkColumns();\n                setTimeout(() => {\n                    this.gameOver = this.checkGameOver();\n                }, 1000);\n            }, 500);\n        },\n        checkCollision(shape, row, col) {\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        if (this.board[row + i] === undefined || this.board[row + i][col + j] === undefined || this.board[row + i][col + j] !== null) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        checkRows() {\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i].every(block => block !== null)) {\n                    this.board[i].forEach((block, index) => {\n                        setTimeout(() => {\n                            this.board[i].splice(index, 1, null);\n                        }, index * 10);\n                    });\n                    this.score += 5 * 8;\n                }\n            }\n        },\n        checkColumns() {\n            for (let i = 0; i < this.board[0].length; i++) {\n                if (this.board.every(row => row[i] !== null)) {\n                    this.board.forEach((block, index) => {\n                        setTimeout(() => {\n                            this.board[index].splice(i, 1, null);\n                        }, index * 10);\n                    });\n                    this.score += 5 * 8;\n                }\n            }\n        },\n        checkGameOver() {\n            //the game is over when there is no space available for the next shape\n            for (let shape of this.currentShapes) {\n                for (let row = 0; row <= this.board.length - this.shapes[shape].length; row++) {\n                    for (let col = 0; col <= this.board[0].length - this.shapes[shape][0].length; col++) {\n                        if (!this.checkCollision(this.shapes[shape], row, col)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        handleShapeClicked(event) {\n            this.selectedShape = event.name; // get the shape name from event\n            this.selectedShapeColor = event.color; // store color for future use\n        },\n        handleShapeDragged(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.updateHoverCells(this.shapes[this.selectedShape], row, col);\n        },\n        handleShapeDropped(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.addShape(this.shapes[this.selectedShape], row, col);\n            this.clearHoverCells();\n        },\n        handleDrop(event) {\n            const name = event.dataTransfer.getData('name');\n            if (!name) return;\n            const offsetX = parseFloat(event.dataTransfer.getData('offsetX'));\n            const offsetY = parseFloat(event.dataTransfer.getData('offsetY'));\n            const boardRect = this.$refs.gameBoard.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n            this.addShape(this.shapes[name], row, col);\n            this.clearHoverCells();\n        },\n        removeShape(name) {\n            const index = this.currentShapes.indexOf(name);\n            if (index > -1) {\n                this.currentShapes.splice(index, 1);\n            }\n            if (this.currentShapes.length === 0) {\n                this.getRandomShapes();\n            }\n        },\n        getRandomShapes() {\n            //select 3 random shapes from the shapes object and add to the currentShapes array the shapes can be repeated\n            this.currentShapes = Array.from({ length: 3 }, () => {\n                return Object.keys(this.shapes)[Math.floor(Math.random() * Object.keys(this.shapes).length)];\n            });\n\n            if (this.checkGameOver()) {\n                this.getRandomShapes();\n            }\n\n        },\n        applyCellStyle(block) {\n            if (block !== null) {\n                return {\n                    background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n                };\n            }\n            return {};\n        },\n        updateHoverCells(shape, row, col) {\n            this.hoverCells = [];\n            if (this.checkCollision(shape, row, col))\n                return;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.hoverCells.push({ row: row + i, col: col + j });\n                    }\n                }\n            }\n        },\n        clearHoverCells() {\n            this.hoverCells = [];\n        },\n        isHoverCell(row, col) {\n            return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n        },\n        saveState() {\n            // Save the current state of the board and the score\n            this.history.push({\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes))\n            });\n        },\n        undoMove() {\n            if (this.history.length > 0) {\n                const previousState = this.history.pop();\n                this.board = previousState.board;\n                this.score = previousState.score;\n                this.currentShapes = previousState.currentShapes;\n                this.gameOver = false;\n            }\n        },\n        openCustomPieceCreator() {\n            this.isCustomPieceCreatorVisible = true;\n        },\n        handleCustomPieceSave(grid) {\n            this.isCustomPieceCreatorVisible = false;\n            const customShape = grid.map(row => row.map(cell => (cell ? 1 : 0)));\n            this.shapes.custom = customShape;\n            this.currentShapes.push('custom');\n        },\n        handleCustomPieceCancel() {\n            this.isCustomPieceCreatorVisible = false;\n        }\n    },\n    mounted() {\n        const savedHighScore = localStorage.getItem('highScore');\n        if (savedHighScore !== null) {\n            this.highScore = parseInt(savedHighScore, 10);\n        }\n        this.resetBoard();\n    }\n}\n</script>\n\n<style>\n.create-piece-button {\n    position: absolute;\n    bottom: 20px;\n    right: 20px;\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #232b54;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    color: #fff;\n    font-weight: bold;\n}\n\n.create-piece-button:hover {\n    background-color: #1e264a;\n}\n</style>\n","<template>\n  <div class=\"shape\" \n       @mousedown=\"handleMouseDown\" \n       @dragstart=\"handleDragStart\" \n       @dragend=\"handleDragEnd\"\n       @touchstart=\"handleTouchStart\"\n       @touchmove=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       :style=\"shapeStyle\"\n       draggable=\"true\"\n       >\n      <div class=\"row\" v-for=\"(row, rowIndex) in shape\" :key=\"rowIndex\">\n          <div class=\"block\" :class=\"{'fill': applyStyles(rowIndex, blockIndex), 'dragging': isDragging}\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"  :style=\"applyStyles(rowIndex, blockIndex)\">\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport './Block.css';\n\nexport default {\n  name: 'BlockComponent',\n  props: {\n    name: {\n      type: String,\n      required: false,\n      default: 'Block'\n    },\n    shape: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n  },\n  data() {\n    return {\n      blockStyle: {},\n      offsetX: 0,\n      offsetY: 0,\n      touchCurrentX: 0,\n      touchCurrentY: 0,\n      isDragging: false,\n      color: this.getRandomColor(),\n    };\n  },\n  computed: {\n    shapeStyle() {\n      if (this.isDragging) {\n        return {\n          position: 'absolute',\n          left: `${this.touchCurrentX}px`,\n          top: `${this.touchCurrentY}px`,\n          zIndex: 1000,\n        };\n      }\n      return {};\n    }\n  },\n  methods: {\n    applyStyles(rowIndex, blockIndex) {\n      if (!this.shape) return;\n      if(this.shape[rowIndex][blockIndex]) {\n        return {\n          background: `linear-gradient(145deg, ${this.color}, ${this.color} 50%, ${this.color} 50%, ${this.color} 100%)`,\n        }\n      }\n    },\n    handleMouseDown() {\n      this.$emit('shapeClicked', {name: this.name, color: this.color});\n    },\n    handleDragStart(event) {\n      event.dataTransfer.setData('name', this.name);\n      const rect = event.target.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const offsetY = event.clientY - rect.top;\n      event.dataTransfer.setData('offsetX', offsetX);\n      event.dataTransfer.setData('offsetY', offsetY);\n    },\n    handleTouchStart(event) {\n      event.preventDefault();\n      const rect = event.target.parentElement.getBoundingClientRect();\n      this.offsetX = event.touches[0].clientX - rect.left;\n      this.offsetY = event.touches[0].clientY - rect.top;\n\n      this.touchCurrentX = event.touches[0].clientX - this.offsetX;\n      this.touchCurrentY = (event.touches[0].clientY - this.offsetY) - this.shape.length * 90;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color});\n    },\n    handleTouchMove(event) {\n      const touch = event.touches[0];\n      this.touchCurrentX = touch.clientX - this.offsetX;\n      this.touchCurrentY = (touch.clientY - this.offsetY) - this.shape.length * 90;\n      this.$emit('shapeDragged', { name: this.name, clientX: touch.clientX, clientY: (touch.clientY - this.offsetY) - this.shape.length * 90, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchEnd(event) {\n      this.isDragging = false;\n      const touch = event.changedTouches[0];\n      this.$emit('shapeDropped', { name: this.name, clientX: touch.clientX, clientY: touch.clientY - (this.shape.length * 90), offsetX: this.offsetX, offsetY: this.offsetY});\n    },\n    getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    },\n  },\n}\n</script>\n","import { render } from \"./Block.vue?vue&type=template&id=2965fc99\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"custom-piece-overlay\" v-if=\"visible\">\n    <div class=\"custom-piece-overlay-content\">\n      <h2>Create Your Custom Piece</h2>\n      <div class=\"custom-piece-grid\">\n        <div class=\"custom-piece-row\" v-for=\"(row, rowIndex) in piece\" :key=\"rowIndex\">\n          <div class=\"custom-piece-cell\" v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\"\n               :class=\"{ 'filled': cell }\"\n               @click=\"toggleCell(rowIndex, cellIndex)\">\n          </div>\n        </div>\n      </div>\n      <div class=\"custom-piece-controls\">\n        <button class=\"custom-piece-button\" @click=\"savePiece\" :disabled=\"blockCount > 6\">Save</button>\n        <button class=\"custom-piece-button\" @click=\"cancel\">Cancel</button>\n      </div>\n      <p>Blocks: {{ blockCount }} / 6</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport './CustomPieceCreator.css';\nexport default {\n  name: 'CustomPieceCreator',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      piece: Array.from({ length: 4 }, () => Array(4).fill(0))\n    };\n  },\n  computed: {\n    blockCount() {\n      return this.piece.flat().filter(cell => cell === 1).length;\n    }\n  },\n  methods: {\n    toggleCell(row, col) {\n      if (this.piece[row][col] === 1) {\n        this.piece[row][col] = 0;\n      } else if (this.blockCount < 6) {\n        this.piece[row][col] = 1;\n      }\n    },\n    savePiece() {\n      this.$emit('save', this.piece);\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>","import { render } from \"./CustomPieceCreator.vue?vue&type=template&id=618b4f1e\"\nimport script from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\nexport * from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameBoard.vue?vue&type=template&id=4a9939d3\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport \"./GameBoard.vue?vue&type=style&index=0&id=4a9939d3&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=42da9d62\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=42da9d62&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblock_blast\"] = self[\"webpackChunkblock_blast\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9060); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GameBoard","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","highScore","_normalizeClass","highlight","isHighScoreAnimated","scoreDisplay","onDragover","_cache","_withModifiers","args","_ctx","handleDragOver","onDrop","$options","handleDrop","ref","_Fragment","_renderList","board","row","rowIndex","block","blockIndex","isHoverCell","style","_normalizeStyle","applyCellStyle","_hoisted_4","currentShapes","shape","index","_createVNode","_component_Block","shapes","name","onShapeClicked","handleShapeClicked","onShapeDragged","handleShapeDragged","onShapeDropped","handleShapeDropped","gameOver","_hoisted_5","onClick","resetBoard","history","length","undoMove","_createCommentVNode","openCustomPieceCreator","_component_CustomPieceCreator","visible","isCustomPieceCreatorVisible","onSave","handleCustomPieceSave","onCancel","handleCustomPieceCancel","onMousedown","handleMouseDown","onDragstart","handleDragStart","onDragend","handleDragEnd","onTouchstart","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","shapeStyle","draggable","$props","applyStyles","isDragging","props","type","String","required","default","Array","Number","data","blockStyle","offsetX","offsetY","touchCurrentX","touchCurrentY","color","this","getRandomColor","computed","position","left","top","zIndex","methods","background","$emit","event","dataTransfer","setData","rect","target","getBoundingClientRect","clientX","clientY","preventDefault","parentElement","touches","touch","changedTouches","letters","i","Math","floor","random","__exports__","piece","cell","cellIndex","$event","toggleCell","savePiece","disabled","blockCount","_hoisted_6","cancel","Boolean","from","fill","flat","filter","col","components","Block","CustomPieceCreator","square","line","line2","t","t2","t3","t4","single","l","l2","l3","l4","l5","j","s","z","bCorner","bCorner2","bCorner3","bCorner4","bSquare","rectangle","rectangle2","corner","corner2","corner3","corner4","u","u2","u3","u4","selectedShape","selectedShapeColor","score","hoverCells","watch","newValue","oldValue","incrementScoreDisplay","animateHighScore","increment","interval","setInterval","clearInterval","setTimeout","getRandomShapes","max","localStorage","setItem","addShape","checkCollision","saveState","removeShape","checkRows","checkColumns","checkGameOver","undefined","every","forEach","splice","parseFloat","boardRect","$refs","gameBoard","dropX","dropY","updateHoverCells","clearHoverCells","getData","indexOf","Object","keys","push","some","JSON","parse","stringify","previousState","pop","grid","customShape","map","custom","mounted","savedHighScore","getItem","parseInt","GameBoard","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}