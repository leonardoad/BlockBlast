{"version":3,"file":"js/app.e970a4b4.js","mappings":"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","sources":["webpack://block-blast/./src/App.vue","webpack://block-blast/./src/components/GameBoard.vue","webpack://block-blast/./src/components/ScoreBoard.vue","webpack://block-blast/./src/components/ScoreBoard.vue?b1f1","webpack://block-blast/./src/components/GameGrid.vue","webpack://block-blast/./src/components/GameGrid.vue?a4c6","webpack://block-blast/./src/components/ShapeSelection.vue","webpack://block-blast/./src/components/Block.vue","webpack://block-blast/./src/components/Block.vue?92b4","webpack://block-blast/./src/components/ShapeSelection.vue?b619","webpack://block-blast/./src/components/CustomPieceCreator.vue","webpack://block-blast/./src/components/CustomPieceCreator.vue?1be7","webpack://block-blast/./src/components/SelectShapes.vue","webpack://block-blast/./src/components/SelectShapes.vue?0d3b","webpack://block-blast/./src/components/GameBoard.vue?b7d7","webpack://block-blast/./src/App.vue?7ccd","webpack://block-blast/./src/main.js","webpack://block-blast/webpack/bootstrap","webpack://block-blast/webpack/runtime/chunk loaded","webpack://block-blast/webpack/runtime/compat get default export","webpack://block-blast/webpack/runtime/define property getters","webpack://block-blast/webpack/runtime/global","webpack://block-blast/webpack/runtime/hasOwnProperty shorthand","webpack://block-blast/webpack/runtime/jsonp chunk loading","webpack://block-blast/webpack/startup"],"sourcesContent":["<template>\n  <GameBoard />\n</template>\n\n<script>\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #fff;\n}\n</style>\n","<template>\n    <div class=\"game-board\">\n        <div class=\"title\">Block Blast!</div>\n        <ScoreBoard :highScore=\"highScore\" :scoreDisplay=\"scoreDisplay\" :isHighScoreAnimated=\"isHighScoreAnimated\" />\n        <div class=\"grid-container\">\n            <GameGrid :board=\"board\" :hoverCells=\"hoverCells\" @dragover=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\" />\n            <!-- Score animations -->\n            <div v-for=\"animation in scoreAnimations\" :key=\"animation.id\" class=\"score-animation\" :style=\"getAnimationStyle(animation)\">\n                +{{ animation.points }} <br> <span class=\"score-text\">{{ animation.text }}</span>\n            </div>\n        </div>\n        <ShapeSelection :shapes=\"shapes\" :currentShapes=\"currentShapes\" @shapeClicked=\"handleShapeClicked\"\n                    @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n    \n        <div v-if=\"gameOver\" class=\"game-over-overlay\">\n            <div class=\"game-over-message\">Game Over!</div>\n            <button @click=\"resetBoard\" class=\"restart-button\">Restart</button>\n            <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        </div>\n\n        <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        <button @click=\"openCustomPieceCreator\" class=\"create-piece-button\">Create Your Custom Piece</button>\n        <button @click=\"openSelectShapes\" class=\"open-select-shapes-button\">Select Shapes</button>\n\n        <CustomPieceCreator :visible=\"isCustomPieceCreatorVisible\" @save=\"handleCustomPieceSave\" @cancel=\"handleCustomPieceCancel\" />\n        <SelectShapes :visible=\"isSelectShapesVisible\" :shapes=\"shapes\" :initialSelectedShapes=\"selectedShapes\" @save=\"handleSelectShapesSave\" @cancel=\"handleSelectShapesCancel\" />\n    </div>\n</template>\n\n<script>\nimport ScoreBoard from './ScoreBoard.vue';\nimport GameGrid from './GameGrid.vue';\nimport ShapeSelection from './ShapeSelection.vue';\nimport CustomPieceCreator from './CustomPieceCreator.vue';\nimport SelectShapes from './SelectShapes.vue';\n\nimport './GameBoard.css';\nexport default {\n    components: { CustomPieceCreator, GameGrid, ScoreBoard, ShapeSelection, SelectShapes },\n    name: 'GameBoard',\n    data() {\n        return {\n            board: Array.from({ length: 8 }, () => Array(8).fill(null)),\n            shapes: {\n                square: [\n                    [1, 1],\n                    [1, 1]\n                ],\n                line: [\n                    [1, 1, 1, 1, 1]\n                ],\n                line2: [\n                    [1],\n                    [1],\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line3: [\n                    [1, 1, 1]\n                ],\n                line4: [\n                    [1, 1]\n                ],\n                line5: [\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line6: [\n                    [1],\n                    [1]\n                ],\n                t: [\n                    [1, 1, 1],\n                    [0, 1, 0]\n                ],\n                t2: [\n                    [1, 0],\n                    [1, 1],\n                    [1, 0]\n                ],\n                t3: [\n                    [0, 1, 0],\n                    [1, 1, 1]\n                ],\n                t4: [\n                    [0, 1],\n                    [1, 1],\n                    [0, 1]\n                ],\n                single: [\n                    [1]\n                ],\n                l: [\n                    [1, 0],\n                    [1, 0],\n                    [1, 1]\n                ],\n                l2: [\n                    [1, 1],\n                    [0, 1],\n                    [0, 1]\n                ],\n                l3: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 0]\n                ],\n                l4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                ],\n                l5: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                ],\n                j: [\n                    [0, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                s: [\n                    [0, 1, 1],\n                    [1, 1, 0]\n                ],\n                z: [\n                    [1, 1, 0],\n                    [0, 1, 1]\n                ],\n                bCorner: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                    [1, 0, 0]\n                ],\n                bCorner2: [\n                    [0, 0, 1],\n                    [0, 0, 1],\n                    [1, 1, 1]\n                ],\n                bCorner3: [\n                    [1, 0, 0],\n                    [1, 0, 0],\n                    [1, 1, 1]\n                ],\n                bCorner4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                    [0, 0, 1]\n                ],\n                bSquare: [\n                    [1, 1, 1],\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle: [\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle2: [\n                    [1, 1],\n                    [1, 1],\n                    [1, 1]\n                ],\n                corner: [\n                    [1, 1],\n                    [0, 1]\n                ],\n                corner2: [\n                    [1, 0],\n                    [1, 1]\n                ],\n                corner3: [\n                    [0, 1],\n                    [1, 1]\n                ],\n                corner4: [\n                    [1, 1],\n                    [1, 0]\n                ],\n                u: [\n                    [1, 0, 1],\n                    [1, 1, 1]\n                ],\n                u2: [\n                    [1, 1, 1],\n                    [1, 0, 1]\n                ],\n                u3: [\n                    [1, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                u4: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 1]\n                ],\n\n            },\n            powers: ['bomb', 'fill-bomb', 'remove-row', 'remove-column', 'fill-row', 'fill-column', 'cross-bomb','cross-fill'],\n            colors: ['#FF0000', '#00FF00', '#0000FF', '#FFFF00', '#FF00FF', '#00FFFF'],\n            currentShapes: [],\n            selectedShape: '',\n            selectedShapeColor: '',\n            selectedShapePower: '',\n            gameOver: false,\n            score: 0,\n            scoreDisplay: 0,\n            highScore: 0,\n            isHighScoreAnimated: false,\n            hoverCells: [],\n            history: [], // Add history array\n            isCustomPieceCreatorVisible: false, // Add visibility state for custom piece creator\n            isSelectShapesVisible: false, // Add visibility state for select shapes\n            selectedShapes: [], // Add selected shapes array\n            combo: 0, // Add combo counter\n            rowsOrColumnsCompleted: false, // Track if any rows/columns were completed in the current round\n            scoreAnimations: [], // Track score animations\n        };\n    },\n    watch: {\n        score(newValue, oldValue) {\n            this.incrementScoreDisplay(newValue, oldValue);\n            if (newValue > this.highScore) {\n                this.animateHighScore();\n            }\n        }\n    },\n    methods: {\n        incrementScoreDisplay(newValue, oldValue) {\n            if (newValue > oldValue) {\n                let increment = 1;\n                if (newValue - oldValue > 50) {\n                    increment = 10;\n                } else if (newValue - oldValue > 10) {\n                    increment = 5;\n                }\n                const interval = setInterval(() => {\n                    this.scoreDisplay += increment;\n                    if (this.scoreDisplay >= this.score) {\n                        this.scoreDisplay = this.score;\n                        clearInterval(interval);\n                    }\n                }, 1);\n            }else{\n                this.scoreDisplay = this.score;\n            }\n        },\n        animateHighScore() {\n            this.isHighScoreAnimated = true;\n            setTimeout(() => {\n                this.isHighScoreAnimated = false;\n            }, 1000); // Duration of the animation\n        },\n        resetBoard() {\n            this.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n            this.gameOver = false; \n            this.highScore = Math.max(this.score, this.highScore);\n            this.score = 0;\n            this.combo = 0;\n            this.rowsOrColumnsCompleted = false;\n            this.history = []; // Clear history on reset\n            this.getRandomShapes();\n            this.saveState();\n        },\n        addShape(shape, row, col) {\n            if (this.checkCollision(shape, row, col)) return;\n            this.saveHistory();\n\n            let shapeBlocks = 0;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.board[row + i][col + j] = this.selectedShapeColor;\n                        shapeBlocks++;\n                    }\n                }\n            }\n            this.score += shapeBlocks; // Points for placing the shape\n            this.removeShape(this.selectedShape);\n            \n            if (this.selectedShapePower) {\n                this.applyPowerEffect(this.selectedShapePower, row, col);\n            }\n\n            setTimeout(() => {\n                let { completedRows, rowPositions } = this.checkRows();\n                let { completedColumns, colPositions } = this.checkColumns();\n                let totalCompleted = completedRows + completedColumns;\n\n                if (totalCompleted > 0) {\n                    this.combo++;\n                    const rowPoints = completedRows * 10; // Points for completed rows/columns\n                    const colPoints = completedColumns * 10; // Points for completed columns\n                    const rowColPoints = totalCompleted * 10; // Points for completed rows/columns\n                    const multiBonus = totalCompleted > 1 ? totalCompleted * 10 : 0; // Bonus for multiple rows/columns\n                    const comboBonus = this.combo * 10; // Combo bonus\n                    const totalPoints = rowColPoints + multiBonus + comboBonus;\n\n                    this.score += totalPoints;\n                    this.rowsOrColumnsCompleted = true; // Mark that rows/columns were completed\n\n                    // Show score animations for completed rows\n                    if (completedRows > 0) {\n                        if(multiBonus + comboBonus > 0) {\n                            this.showScoreAnimation(multiBonus + comboBonus, rowPositions[0], 0, true, \"Combo\");\n                        } else {\n                            this.showScoreAnimation(rowPoints, rowPositions[0], 0, true, \"Good\");\n                        }\n                    }\n\n                    // Show score animations for completed columns\n                    if(completedColumns > 0) {\n                        if(multiBonus + comboBonus > 0) {\n                            this.showScoreAnimation(multiBonus + comboBonus, 0, colPositions[0], false, \"Combo\");\n                        } else {\n                            this.showScoreAnimation(colPoints, 0, colPositions[0], false, \"Good\");\n                        }\n                    }\n                    \n                }\n                setTimeout(() => {\n                    if (this.checkBoardClear()) {\n                        this.score += 300; // Bonus for clearing the board\n                        this.showScoreAnimation(300, 4, 4, true, \"Clear\");\n                    }\n                }, 500);\n\n\n                if (this.currentShapes.length === 0) {\n                    if (!this.rowsOrColumnsCompleted) {\n                        this.combo = 0; // Reset combo if no rows/columns were completed in the last play of the round\n                    }\n                    this.getRandomShapes();\n                }\n\n            }, 500);\n\n            setTimeout(() => {\n                this.gameOver = this.checkGameOver();\n                this.saveState(); // Save the current state after removing the completed rows/columns\n            }, 1000);\n            \n        },\n        applyPowerEffect(power, row, col){\n            switch(power){\n                case 'bomb':\n                    this.applyBombPower(row, col);\n                    break;\n                case 'fill-bomb':\n                    this.applyFillBombPower(row, col);\n                    break;\n                case 'cross-bomb':\n                    this.applyCrossBombPower(row, col);\n                    break;\n                case 'cross-fill':\n                    this.applyCrossFillPower(row, col);\n                    break;\n                case 'remove-row':\n                    this.applyRemoveRowPower(row);\n                    break;\n                case 'remove-column':\n                    this.applyRemoveColumnPower(col);\n                    break;\n                case 'fill-row':\n                    this.applyFillRowPower(row);\n                    break;\n                case 'fill-column':\n                    this.applyFillColumnPower(col);\n                    break;\n            }\n        },\n        applyBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        this.board[i][j] = null;\n                    }\n                }\n            }\n        },\n        applyCrossBombPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                this.board[i][col] = null;\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                this.board[row][j] = null;\n            }\n        },\n        applyCrossFillPower(row, col) {\n            for (let i = 0; i < this.board.length; i++) {\n                this.board[i][col] = this.selectedShapeColor;\n            }\n            for (let j = 0; j < this.board[0].length; j++) {\n                this.board[row][j] = this.selectedShapeColor;\n            }\n        },\n        applyFillBombPower(row, col) {\n            for (let i = row - 1; i <= row + 1; i++) {\n                for (let j = col - 1; j <= col + 1; j++) {\n                    if (this.board[i] && this.board[i][j] !== undefined) {\n                        this.board[i][j] = this.selectedShapeColor;\n                    }\n                }\n            }\n        },\n        applyRemoveRowPower(row) {\n            this.removeRow(row);\n        },\n        applyFillRowPower(row) {\n            this.board[row].fill(this.selectedShapeColor);\n        },\n        applyFillColumnPower(col) {\n            this.board.forEach(row => row[col] = this.selectedShapeColor);\n        },\n        applyRemoveColumnPower(col) {\n            this.removeColumn(col);\n        },\n        checkBoardClear() {\n            return this.board.every(row => row.every(block => block === null));\n        },\n        checkCollision(shape, row, col) {\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        if (this.board[row + i] === undefined || this.board[row + i][col + j] === undefined || this.board[row + i][col + j] !== null) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        checkRows() {\n            let rowPositions = [];\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i].every(block => block !== null)) {\n                    rowPositions.push(i);\n                   this.removeRow(i);\n                }\n            }\n            return { completedRows: rowPositions.length, rowPositions };\n        },\n        removeRow(row) {\n            this.board[row].forEach((block, index) => {\n                setTimeout(() => {\n                    this.board[row].splice(index, 1, null);\n                }, index * 10);\n            });\n        },\n        checkColumns() {\n            let colPositions = [];\n            for (let i = 0; i < this.board[0].length; i++) {\n                if (this.board.every(row => row[i] !== null)) {\n                    this.removeColumn(i);\n                    colPositions.push(i);\n                }\n            }\n            return { completedColumns: colPositions.length, colPositions };\n        },\n        removeColumn(col) {\n            this.board.forEach((row, index) => {\n                setTimeout(() => {\n                    this.board[index].splice(col, 1, null);\n                }, index * 10);\n            });\n        },\n        checkGameOver() {\n            //the game is over when there is no space available for the next shape\n            for (let shape of this.currentShapes) {\n                for (let row = 0; row <= this.board.length - this.shapes[shape.name].length; row++) {\n                    for (let col = 0; col <= this.board[0].length - this.shapes[shape.name][0].length; col++) {\n                        if (!this.checkCollision(this.shapes[shape.name], row, col)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        handleShapeClicked(event) {\n            this.selectedShape = event.name; // get the shape name from event\n            this.selectedShapeColor = event.color; // store color for future use\n            this.selectedShapePower = event.power; // store power for future use\n        },\n        handleShapeDragged(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.updateHoverCells(this.shapes[this.selectedShape], row, col);\n        },\n        handleShapeDropped(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.addShape(this.shapes[this.selectedShape], row, col);\n            this.clearHoverCells();\n        },\n        handleDrop(event) {\n            const name = event.dataTransfer.getData('name');\n            if (!name) return;\n            const offsetX = parseFloat(event.dataTransfer.getData('offsetX'));\n            const offsetY = parseFloat(event.dataTransfer.getData('offsetY'));\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n            this.addShape(this.shapes[name], row, col);\n            this.clearHoverCells();\n        },\n        removeShape(name) {\n            const index = this.currentShapes.findIndex(shape => shape.name === name);\n            if (index > -1) {\n                this.currentShapes.splice(index, 1);\n            }\n        },\n        getRandomShapes() {\n            //select 3 random shapes from the shapes object and add to the currentShapes array the shapes can be repeated\n            this.currentShapes = Array.from({ length: 3 }, () => {\n                return { name: this.selectedShapes[Math.floor(Math.random() * this.selectedShapes.length)] };\n            });\n\n            this.currentShapes.forEach(shape => {\n                shape.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n            });\n\n            this.currentShapes.forEach(shape => {\n                if(shape.name === 'single'){\n                    shape.power = this.powers[Math.floor(Math.random() * this.powers.length)];\n                }\n            });\n\n            if (this.checkGameOver()) {\n                this.getRandomShapes();\n            }\n\n            this.rowsOrColumnsCompleted = false; // Reset for the new round\n        },\n        applyCellStyle(block) {\n            if (block !== null) {\n                return {\n                    background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n                };\n            }\n            return {};\n        },\n        updateHoverCells(shape, row, col) {\n            this.hoverCells = [];\n            if (this.checkCollision(shape, row, col))\n                return;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.hoverCells.push({ row: row + i, col: col + j });\n                    }\n                }\n            }\n        },\n        clearHoverCells() {\n            this.hoverCells = [];\n        },\n        isHoverCell(row, col) {\n            return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n        },\n        saveHistory() {\n            this.history.push({\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes))\n            });\n        },\n        saveState() {\n            // Save the current state of the board and the score\n            const state = {\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes)),\n                selectedShape: this.selectedShape,\n                selectedShapeColor: this.selectedShapeColor,\n                history: JSON.parse(JSON.stringify(this.history)),\n                selectedShapes: this.selectedShapes,\n                highScore: this.highScore,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted\n            };\n            localStorage.setItem('gameState', JSON.stringify(state));\n        },\n        undoMove() {\n            if (this.history.length > 0) {\n                const previousState = this.history.pop();\n                this.board = previousState.board;\n                this.score = previousState.score;\n                this.currentShapes = previousState.currentShapes;\n                this.gameOver = false;\n                this.combo = previousState.combo;\n                this.rowsOrColumnsCompleted = previousState.rowsOrColumnsCompleted;\n            }\n        },\n        openCustomPieceCreator() {\n            this.isCustomPieceCreatorVisible = true;\n        },\n        handleCustomPieceSave(grid) {\n            this.isCustomPieceCreatorVisible = false;\n            const customShape = grid.map(row => row.map(cell => (cell ? 1 : 0)));\n            this.shapes.custom = customShape;\n            this.currentShapes.push({ name: 'custom', color: '#'+Math.floor(Math.random()*16777215).toString(16) });\n            this.saveState();\n        },\n        handleCustomPieceCancel() {\n            this.isCustomPieceCreatorVisible = false;\n        },\n        openSelectShapes() {\n            this.isSelectShapesVisible = true;\n        },\n        handleSelectShapesSave(selectedShapes) {\n            this.isSelectShapesVisible = false;\n            this.selectedShapes = selectedShapes;\n            this.getRandomShapes();\n            this.saveState(); \n        },\n        handleSelectShapesCancel() {\n            this.isSelectShapesVisible = false;\n        },\n        showScoreAnimation(points, row, col, isRow, text) {\n            const animation = {\n                points,\n                row,\n                col,\n                isRow,\n                text,\n                id: Date.now() // Unique ID for each animation\n            };\n            this.scoreAnimations.push(animation);\n            setTimeout(() => {\n                this.scoreAnimations = this.scoreAnimations.filter(anim => anim.id !== animation.id);\n            }, 2000); // Duration of the animation\n        },\n        getAnimationStyle(animation) {\n            const size = 40; // Assuming each cell is 40x40 pixels\n            const top = animation.isRow ? ((animation.row) * size) : size * 4;\n            const left = animation.isRow ? size * 4 : ((animation.col + 1)  * size);\n            return {\n                top: `${top}px`,\n                left: `${left}px`,\n                transition: 'transform 0.5s, opacity 0.5s',\n                opacity: 1,\n            };\n        },\n    },\n    mounted() {\n\n        const savedGameState = localStorage.getItem('gameState');\n        if (savedGameState) {\n            const state = JSON.parse(savedGameState);\n            this.board = state.board;\n            this.score = state.score;\n            this.currentShapes = state.currentShapes;\n            this.selectedShape = state.selectedShape;\n            this.selectedShapeColor = state.selectedShapeColor;\n            this.history = state.history;\n            this.selectedShapes = state.selectedShapes;\n            this.highScore = state.highScore;\n            this.combo = state.combo;\n            this.rowsOrColumnsCompleted = state.rowsOrColumnsCompleted;\n        } else {\n            this.selectedShapes = Object.keys(this.shapes);\n            this.resetBoard();\n        }\n\n    }\n}\n</script>\n","<template>\n  <div class=\"score-board\">\n    <div class=\"high-score\">High Score: {{ highScore }}</div>\n    <div class=\"score\" :class=\"{ highlight: isHighScoreAnimated }\">{{ scoreDisplay }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScoreBoard',\n  props: {\n    highScore: {\n      type: Number,\n      required: true\n    },\n    scoreDisplay: {\n      type: Number,\n      required: true\n    },\n    isHighScoreAnimated: {\n      type: Boolean,\n      required: true\n    }\n  }\n};\n</script>\n ","import { render } from \"./ScoreBoard.vue?vue&type=template&id=e55e7eee\"\nimport script from \"./ScoreBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid\" @dragover.prevent=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\">\n    <div class=\"row\" v-for=\"(row, rowIndex) in board\" :key=\"`grid-${rowIndex}`\">\n      <div class=\"cell\" v-for=\"(block, blockIndex) in row\" :key=\"`cell-${rowIndex}-${blockIndex}`\"\n           :class=\"{ 'filled-cell': block, 'hover-cell': isHoverCell(rowIndex, blockIndex) }\"\n           :style=\"applyCellStyle(block)\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameGrid',\n  props: {\n    board: {\n      type: Array,\n      required: true\n    },\n    hoverCells: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleDragOver(event) {\n      this.$emit('dragover', event);\n    },\n    handleDrop(event) {\n      this.$emit('drop', event);\n    },\n    isHoverCell(row, col) {\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n    },\n    applyCellStyle(block) {\n      if (block !== null) {\n        return {\n          background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n        };\n      }\n      return {};\n    }\n  }\n};\n</script>\n","import { render } from \"./GameGrid.vue?vue&type=template&id=65ce79e9\"\nimport script from \"./GameGrid.vue?vue&type=script&lang=js\"\nexport * from \"./GameGrid.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"shape-selection\">\n    <div v-for=\"(shape, index) in currentShapes\" :key=\"`${shape.name}-${index}`\">\n      <Block :shape=\"shapes[shape.name]\" :name=\"shape.name\" :index=\"index\" @shapeClicked=\"handleShapeClicked\"\n             @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" :color=\"shape.color\" :power=\"shape.power\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'ShapeSelection',\n  components: { Block },\n  props: {\n    shapes: {\n      type: Object,\n      required: true\n    },\n    currentShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleShapeClicked(event) {\n      this.$emit('shapeClicked', event);\n    },\n    handleShapeDragged(event) {\n      this.$emit('shapeDragged', event);\n    },\n    handleShapeDropped(event) {\n      this.$emit('shapeDropped', event);\n    }\n  }\n};\n</script>","<template>\n  <div class=\"shape\" \n       @mousedown=\"handleMouseDown\" \n       @dragstart=\"handleDragStart\" \n       @dragend=\"handleDragEnd\"\n       @touchstart=\"handleTouchStart\"\n       @touchmove=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       :style=\"shapeStyle\"\n       draggable=\"true\"\n       >\n      <div class=\"row\" v-for=\"(row, rowIndex) in shape\" :key=\"rowIndex\">\n          <div class=\"block\" :class=\"{'fill': applyStyles(rowIndex, blockIndex), 'dragging': isDragging}\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"  :style=\"applyStyles(rowIndex, blockIndex)\">\n          </div>\n      </div>\n  </div>\n  {{ power }}\n</template>\n\n<script>\nimport './Block.css';\n\nexport default {\n  name: 'BlockComponent',\n  props: {\n    name: {\n      type: String,\n      required: false,\n      default: 'Block'\n    },\n    shape: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    disableDragging: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    power: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      blockStyle: {},\n      offsetX: 0,\n      offsetY: 0,\n      touchCurrentX: 0,\n      touchCurrentY: 0,\n      isDragging: false,\n    };\n  },\n  computed: {\n    shapeStyle() {\n      if (this.isDragging) {\n        return {\n          position: 'absolute',\n          left: `${this.touchCurrentX}px`,\n          top: `${this.touchCurrentY}px`,\n          zIndex: 1000,\n        };\n      }\n      return {};\n    }\n  },\n  methods: {\n    applyStyles(rowIndex, blockIndex) {\n      if (!this.shape) return;\n      if(this.shape[rowIndex][blockIndex]) {\n        return {\n          background: `linear-gradient(145deg, ${this.color}, ${this.color} 50%, ${this.color} 50%, ${this.color} 100%)`,\n        }\n      }\n    },\n    handleMouseDown() {\n      if (this.disableDragging) return;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power});\n    },\n    handleDragStart(event) {\n      if (this.disableDragging) return;\n      event.dataTransfer.setData('name', this.name);\n      const rect = event.target.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const offsetY = event.clientY - rect.top;\n      event.dataTransfer.setData('offsetX', offsetX);\n      event.dataTransfer.setData('offsetY', offsetY);\n    },\n    handleTouchStart(event) {\n      if (this.disableDragging) return;\n      event.preventDefault();\n      const rect = event.target.parentElement.getBoundingClientRect();\n      this.offsetX = event.touches[0].clientX - rect.left;\n      this.offsetY = event.touches[0].clientY - rect.top;\n\n      this.touchCurrentX = event.touches[0].clientX - this.offsetX;\n      this.touchCurrentY = (event.touches[0].clientY - this.offsetY) - this.shape.length * 90;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color, power: this.power});\n    },\n    handleTouchMove(event) {\n      if (this.disableDragging) return;\n      const touch = event.touches[0];\n      this.touchCurrentX = touch.clientX - this.offsetX;\n      this.touchCurrentY = (touch.clientY - this.offsetY) - this.shape.length * 90;\n      this.$emit('shapeDragged', { name: this.name, clientX: touch.clientX, clientY: (touch.clientY - this.offsetY) - this.shape.length * 90, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchEnd(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      const touch = event.changedTouches[0];\n      this.$emit('shapeDropped', { name: this.name, clientX: touch.clientX, clientY: touch.clientY - (this.shape.length * 90), offsetX: this.offsetX, offsetY: this.offsetY});\n    },\n  },\n}\n</script>\n","import { render } from \"./Block.vue?vue&type=template&id=566d0dd7\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ShapeSelection.vue?vue&type=template&id=0d1d0543\"\nimport script from \"./ShapeSelection.vue?vue&type=script&lang=js\"\nexport * from \"./ShapeSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"custom-piece-overlay\" v-if=\"visible\">\n    <div class=\"custom-piece-overlay-content\">\n      <h2>Create Your Custom Piece</h2>\n      <div class=\"custom-piece-grid\">\n        <div class=\"custom-piece-row\" v-for=\"(row, rowIndex) in piece\" :key=\"rowIndex\">\n          <div class=\"custom-piece-cell\" v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\"\n               :class=\"{ 'filled': cell }\"\n               @click=\"toggleCell(rowIndex, cellIndex)\">\n          </div>\n        </div>\n      </div>\n      <div class=\"custom-piece-controls\">\n        <button class=\"custom-piece-button\" @click=\"savePiece\" :disabled=\"blockCount > 6\">Save</button>\n        <button class=\"custom-piece-button\" @click=\"cancel\">Cancel</button>\n      </div>\n      <p>Blocks: {{ blockCount }} / 6</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport './CustomPieceCreator.css';\nexport default {\n  name: 'CustomPieceCreator',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      piece: Array.from({ length: 4 }, () => Array(4).fill(0))\n    };\n  },\n  computed: {\n    blockCount() {\n      return this.piece.flat().filter(cell => cell === 1).length;\n    }\n  },\n  methods: {\n    toggleCell(row, col) {\n      if (this.piece[row][col] === 1) {\n        this.piece[row][col] = 0;\n      } else if (this.blockCount < 6) {\n        this.piece[row][col] = 1;\n      }\n    },\n    savePiece() {\n      this.$emit('save', this.piece);\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>","import { render } from \"./CustomPieceCreator.vue?vue&type=template&id=618b4f1e\"\nimport script from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\nexport * from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"select-shapes-overlay\" v-if=\"visible\">\n    <div class=\"select-shapes-content\">\n      <div class=\"select-shapes-grid\">\n        <div\n          class=\"select-shapes-cell\"\n          v-for=\"(shape, shapeName) in shapes\"\n          :key=\"shapeName\"\n          :class=\"{ selected: selectedShapes.includes(shapeName) }\"\n          @click=\"toggleShapeSelection(shapeName)\"\n        >\n          <Block :shape=\"shape\" :name=\"shapeName\" :disableDragging=\"true\" />\n        </div>\n      </div>\n      <div class=\"select-shapes-controls\">\n        <button class=\"select-shapes-button\" @click=\"saveSelection\">Save</button>\n        <button class=\"select-shapes-button\" @click=\"cancelSelection\">Cancel</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'SelectShapes',\n  components: { Block },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    shapes: {\n      type: Object,\n      required: true\n    },\n    initialSelectedShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedShapes: []\n    };\n  },\n  watch: {\n    initialSelectedShapes: {\n      immediate: true,\n      handler(newVal) {\n        this.selectedShapes = [...newVal];\n      }\n    }\n  },\n  methods: {\n    toggleShapeSelection(shapeName) {\n      const index = this.selectedShapes.indexOf(shapeName);\n      if (index > -1) {\n        this.selectedShapes.splice(index, 1);\n      } else {\n        this.selectedShapes.push(shapeName);\n      }\n    },\n    saveSelection() {\n      this.$emit('save', this.selectedShapes);\n    },\n    cancelSelection() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>\n\n<style>\n.select-shapes-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.select-shapes-content {\n  background: linear-gradient(to bottom, #4358ad, #2c3e75);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 600px;\n}\n\n.select-shapes-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  margin-bottom: 20px;\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.select-shapes-cell {\n  background: #333;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.select-shapes-cell.selected {\n  background: #ff0;\n}\n\n.select-shapes-controls {\n  display: flex;\n  justify-content: space-between;\n}\n\n.select-shapes-button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #232b54;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  color: #fff;\n  font-weight: bold;\n}\n\n.select-shapes-button:hover {\n  background-color: #1e264a;\n}\n</style>","import { render } from \"./SelectShapes.vue?vue&type=template&id=86021f54\"\nimport script from \"./SelectShapes.vue?vue&type=script&lang=js\"\nexport * from \"./SelectShapes.vue?vue&type=script&lang=js\"\n\nimport \"./SelectShapes.vue?vue&type=style&index=0&id=86021f54&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameBoard.vue?vue&type=template&id=b3f46fc2\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=42da9d62\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=42da9d62&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblock_blast\"] = self[\"webpackChunkblock_blast\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2852); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GameBoard","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_ScoreBoard","highScore","$data","scoreDisplay","isHighScoreAnimated","_hoisted_2","_component_GameGrid","board","hoverCells","onDragover","_ctx","handleDragOver","onDrop","$options","handleDrop","ref","_Fragment","_renderList","scoreAnimations","animation","id","style","_normalizeStyle","getAnimationStyle","_createTextVNode","_toDisplayString","points","_hoisted_3","text","_component_ShapeSelection","shapes","currentShapes","onShapeClicked","handleShapeClicked","onShapeDragged","handleShapeDragged","onShapeDropped","handleShapeDropped","gameOver","_hoisted_4","onClick","_cache","args","resetBoard","history","length","undoMove","_createCommentVNode","openCustomPieceCreator","openSelectShapes","_component_CustomPieceCreator","visible","isCustomPieceCreatorVisible","onSave","handleCustomPieceSave","onCancel","handleCustomPieceCancel","_component_SelectShapes","isSelectShapesVisible","initialSelectedShapes","selectedShapes","handleSelectShapesSave","handleSelectShapesCancel","$props","_normalizeClass","highlight","name","props","type","Number","required","Boolean","__exports__","_withModifiers","row","rowIndex","block","blockIndex","isHoverCell","applyCellStyle","Array","methods","event","this","$emit","col","some","cell","background","shape","index","_component_Block","color","power","onMousedown","handleMouseDown","onDragstart","handleDragStart","onDragend","handleDragEnd","onTouchstart","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","shapeStyle","draggable","applyStyles","isDragging","String","default","disableDragging","data","blockStyle","offsetX","offsetY","touchCurrentX","touchCurrentY","computed","position","left","top","zIndex","dataTransfer","setData","rect","target","getBoundingClientRect","clientX","clientY","preventDefault","parentElement","touches","touch","changedTouches","components","Block","Object","piece","cellIndex","$event","toggleCell","_hoisted_5","savePiece","disabled","blockCount","_hoisted_6","cancel","from","fill","flat","filter","shapeName","selected","includes","toggleShapeSelection","saveSelection","cancelSelection","watch","immediate","handler","newVal","indexOf","splice","push","CustomPieceCreator","GameGrid","ScoreBoard","ShapeSelection","SelectShapes","square","line","line2","line3","line4","line5","line6","t","t2","t3","t4","single","l","l2","l3","l4","l5","j","s","z","bCorner","bCorner2","bCorner3","bCorner4","bSquare","rectangle","rectangle2","corner","corner2","corner3","corner4","u","u2","u3","u4","powers","colors","selectedShape","selectedShapeColor","selectedShapePower","score","combo","rowsOrColumnsCompleted","newValue","oldValue","incrementScoreDisplay","animateHighScore","increment","interval","setInterval","clearInterval","setTimeout","Math","max","getRandomShapes","saveState","addShape","checkCollision","saveHistory","shapeBlocks","i","removeShape","applyPowerEffect","completedRows","rowPositions","checkRows","completedColumns","colPositions","checkColumns","totalCompleted","rowPoints","colPoints","rowColPoints","multiBonus","comboBonus","totalPoints","showScoreAnimation","checkBoardClear","checkGameOver","applyBombPower","applyFillBombPower","applyCrossBombPower","applyCrossFillPower","applyRemoveRowPower","applyRemoveColumnPower","applyFillRowPower","applyFillColumnPower","undefined","removeRow","forEach","removeColumn","every","parseFloat","boardRect","$refs","gameBoard","$el","dropX","dropY","floor","updateHoverCells","clearHoverCells","getData","findIndex","random","JSON","parse","stringify","state","localStorage","setItem","previousState","pop","grid","customShape","map","custom","toString","isRow","Date","now","anim","size","transition","opacity","mounted","savedGameState","getItem","keys","GameBoard","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}