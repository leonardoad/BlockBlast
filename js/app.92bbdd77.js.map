{"version":3,"file":"js/app.92bbdd77.js","mappings":"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","sources":["webpack://block-blast/./src/App.vue","webpack://block-blast/./src/components/GameBoard.vue","webpack://block-blast/./src/components/ScoreBoard.vue","webpack://block-blast/./src/components/ScoreBoard.vue?b1f1","webpack://block-blast/./src/components/GameGrid.vue","webpack://block-blast/./src/components/GameGrid.vue?a4c6","webpack://block-blast/./src/components/ShapeSelection.vue","webpack://block-blast/./src/components/Block.vue","webpack://block-blast/./src/components/Block.vue?92b4","webpack://block-blast/./src/components/ShapeSelection.vue?b619","webpack://block-blast/./src/components/CustomPieceCreator.vue","webpack://block-blast/./src/components/CustomPieceCreator.vue?1be7","webpack://block-blast/./src/components/SelectShapes.vue","webpack://block-blast/./src/components/SelectShapes.vue?0d3b","webpack://block-blast/./src/components/GameBoard.vue?b7d7","webpack://block-blast/./src/App.vue?7ccd","webpack://block-blast/./src/main.js","webpack://block-blast/webpack/bootstrap","webpack://block-blast/webpack/runtime/chunk loaded","webpack://block-blast/webpack/runtime/compat get default export","webpack://block-blast/webpack/runtime/define property getters","webpack://block-blast/webpack/runtime/global","webpack://block-blast/webpack/runtime/hasOwnProperty shorthand","webpack://block-blast/webpack/runtime/jsonp chunk loading","webpack://block-blast/webpack/startup"],"sourcesContent":["<template>\n  <GameBoard />\n</template>\n\n<script>\nimport GameBoard from './components/GameBoard.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    GameBoard\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #fff;\n}\n</style>\n","<template>\n    <div class=\"game-board\">\n        <div class=\"title\">Block Blast! {{combo}}</div>\n        <ScoreBoard :highScore=\"highScore\" :scoreDisplay=\"scoreDisplay\" :isHighScoreAnimated=\"isHighScoreAnimated\" />\n        <div class=\"grid-container\">\n            <GameGrid :board=\"board\" :hoverCells=\"hoverCells\" @dragover=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\" />\n            <!-- Score animations -->\n            <div v-for=\"animation in scoreAnimations\" :key=\"animation.id\" class=\"score-animation\" :style=\"getAnimationStyle(animation)\">\n                +{{ animation.points }}\n            </div>\n        </div>\n        <ShapeSelection :shapes=\"shapes\" :currentShapes=\"currentShapes\" @shapeClicked=\"handleShapeClicked\"\n                    @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n    \n        <div v-if=\"gameOver\" class=\"game-over-overlay\">\n            <div class=\"game-over-message\">Game Over!</div>\n            <button @click=\"resetBoard\" class=\"restart-button\">Restart</button>\n            <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        </div>\n\n        <button @click=\"undoMove\" class=\"back-button\" v-if=\"history.length > 0\">Back</button>\n        <button @click=\"openCustomPieceCreator\" class=\"create-piece-button\">Create Your Custom Piece</button>\n        <button @click=\"openSelectShapes\" class=\"open-select-shapes-button\">Select Shapes</button>\n\n        <CustomPieceCreator :visible=\"isCustomPieceCreatorVisible\" @save=\"handleCustomPieceSave\" @cancel=\"handleCustomPieceCancel\" />\n        <SelectShapes :visible=\"isSelectShapesVisible\" :shapes=\"shapes\" :initialSelectedShapes=\"selectedShapes\" @save=\"handleSelectShapesSave\" @cancel=\"handleSelectShapesCancel\" />\n    </div>\n</template>\n\n<script>\nimport ScoreBoard from './ScoreBoard.vue';\nimport GameGrid from './GameGrid.vue';\nimport ShapeSelection from './ShapeSelection.vue';\nimport CustomPieceCreator from './CustomPieceCreator.vue';\nimport SelectShapes from './SelectShapes.vue';\n\nimport './GameBoard.css';\nexport default {\n    components: { CustomPieceCreator, GameGrid, ScoreBoard, ShapeSelection, SelectShapes },\n    name: 'GameBoard',\n    data() {\n        return {\n            board: Array.from({ length: 8 }, () => Array(8).fill(null)),\n            shapes: {\n                square: [\n                    [1, 1],\n                    [1, 1]\n                ],\n                line: [\n                    [1, 1, 1, 1, 1]\n                ],\n                line2: [\n                    [1],\n                    [1],\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line3: [\n                    [1, 1, 1]\n                ],\n                line4: [\n                    [1, 1]\n                ],\n                line5: [\n                    [1],\n                    [1],\n                    [1]\n                ],\n                line6: [\n                    [1],\n                    [1]\n                ],\n                t: [\n                    [1, 1, 1],\n                    [0, 1, 0]\n                ],\n                t2: [\n                    [1, 0],\n                    [1, 1],\n                    [1, 0]\n                ],\n                t3: [\n                    [0, 1, 0],\n                    [1, 1, 1]\n                ],\n                t4: [\n                    [0, 1],\n                    [1, 1],\n                    [0, 1]\n                ],\n                single: [\n                    [1]\n                ],\n                l: [\n                    [1, 0],\n                    [1, 0],\n                    [1, 1]\n                ],\n                l2: [\n                    [1, 1],\n                    [0, 1],\n                    [0, 1]\n                ],\n                l3: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 0]\n                ],\n                l4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                ],\n                l5: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                ],\n                j: [\n                    [0, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                s: [\n                    [0, 1, 1],\n                    [1, 1, 0]\n                ],\n                z: [\n                    [1, 1, 0],\n                    [0, 1, 1]\n                ],\n                bCorner: [\n                    [1, 1, 1],\n                    [1, 0, 0],\n                    [1, 0, 0]\n                ],\n                bCorner2: [\n                    [0, 0, 1],\n                    [0, 0, 1],\n                    [1, 1, 1]\n                ],\n                bCorner3: [\n                    [1, 0, 0],\n                    [1, 0, 0],\n                    [1, 1, 1]\n                ],\n                bCorner4: [\n                    [1, 1, 1],\n                    [0, 0, 1],\n                    [0, 0, 1]\n                ],\n                bSquare: [\n                    [1, 1, 1],\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle: [\n                    [1, 1, 1],\n                    [1, 1, 1]\n                ],\n                rectangle2: [\n                    [1, 1],\n                    [1, 1],\n                    [1, 1]\n                ],\n                corner: [\n                    [1, 1],\n                    [0, 1]\n                ],\n                corner2: [\n                    [1, 0],\n                    [1, 1]\n                ],\n                corner3: [\n                    [0, 1],\n                    [1, 1]\n                ],\n                corner4: [\n                    [1, 1],\n                    [1, 0]\n                ],\n                u: [\n                    [1, 0, 1],\n                    [1, 1, 1]\n                ],\n                u2: [\n                    [1, 1, 1],\n                    [1, 0, 1]\n                ],\n                u3: [\n                    [1, 1],\n                    [0, 1],\n                    [1, 1]\n                ],\n                u4: [\n                    [1, 1],\n                    [1, 0],\n                    [1, 1]\n                ],\n\n            },\n            currentShapes: [],\n            selectedShape: '',\n            selectedShapeColor: '',\n            gameOver: false,\n            score: 0,\n            scoreDisplay: 0,\n            highScore: 0,\n            isHighScoreAnimated: false,\n            hoverCells: [],\n            history: [], // Add history array\n            isCustomPieceCreatorVisible: false, // Add visibility state for custom piece creator\n            isSelectShapesVisible: false, // Add visibility state for select shapes\n            selectedShapes: [], // Add selected shapes array\n            combo: 0, // Add combo counter\n            rowsOrColumnsCompleted: false, // Track if any rows/columns were completed in the current round\n            scoreAnimations: [], // Track score animations\n        };\n    },\n    watch: {\n        score(newValue, oldValue) {\n            this.incrementScoreDisplay(newValue, oldValue);\n            if (newValue > this.highScore) {\n                this.animateHighScore();\n            }\n        }\n    },\n    methods: {\n        incrementScoreDisplay(newValue, oldValue) {\n            if (newValue > oldValue) {\n                let increment = 1;\n                if (newValue - oldValue > 50) {\n                    increment = 10;\n                } else if (newValue - oldValue > 10) {\n                    increment = 5;\n                }\n                const interval = setInterval(() => {\n                    this.scoreDisplay += increment;\n                    if (this.scoreDisplay >= this.score) {\n                        this.scoreDisplay = this.score;\n                        clearInterval(interval);\n                    }\n                }, 1);\n            }else{\n                this.scoreDisplay = this.score;\n            }\n        },\n        animateHighScore() {\n            this.isHighScoreAnimated = true;\n            setTimeout(() => {\n                this.isHighScoreAnimated = false;\n            }, 1000); // Duration of the animation\n        },\n        resetBoard() {\n            this.board = Array.from({ length: 8 }, () => Array(8).fill(null));\n            this.gameOver = false; \n            this.highScore = Math.max(this.score, this.highScore);\n            this.score = 0;\n            this.combo = 0;\n            this.rowsOrColumnsCompleted = false;\n            this.history = []; // Clear history on reset\n            this.getRandomShapes();\n            this.saveState();\n        },\n        addShape(shape, row, col) {\n            if (this.checkCollision(shape, row, col)) return;\n            this.saveHistory();\n            let shapeBlocks = 0;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.board[row + i][col + j] = this.selectedShapeColor;\n                        shapeBlocks++;\n                    }\n                }\n            }\n            this.score += shapeBlocks; // Points for placing the shape\n            this.removeShape(this.selectedShape);\n\n            setTimeout(() => {\n                let { completedRows, rowPositions } = this.checkRows();\n                let { completedColumns, colPositions } = this.checkColumns();\n                let totalCompleted = completedRows + completedColumns;\n\n                if (totalCompleted > 0) {\n                    this.combo++;\n                    const rowPoints = completedRows * 10; // Points for completed rows/columns\n                    const colPoints = completedColumns * 10; // Points for completed columns\n                    const rowColPoints = totalCompleted * 10; // Points for completed rows/columns\n                    const multiBonus = totalCompleted > 1 ? totalCompleted * 10 : 0; // Bonus for multiple rows/columns\n                    const comboBonus = this.combo * 10; // Combo bonus\n                    const totalPoints = rowColPoints + multiBonus + comboBonus;\n\n                    this.score += totalPoints;\n                    this.rowsOrColumnsCompleted = true; // Mark that rows/columns were completed\n\n                    // Show score animations for completed rows\n                    if (completedRows > 0) {\n                        if(multiBonus + comboBonus > 0) {\n                            this.showScoreAnimation(multiBonus + comboBonus, rowPositions[0], 0, true);\n                        } else {\n                            this.showScoreAnimation(rowPoints, rowPositions[0], 0, true);\n                        }\n                    }\n\n                    // Show score animations for completed columns\n                    if(completedColumns > 0) {\n                        if(multiBonus + comboBonus > 0) {\n                            this.showScoreAnimation(multiBonus + comboBonus, 0, colPositions[0], false);\n                        } else {\n                            this.showScoreAnimation(colPoints, 0, colPositions[0], false);\n                        }\n                    }\n\n                }\n\n                if (this.currentShapes.length === 0) {\n                    if (!this.rowsOrColumnsCompleted) {\n                        this.combo = 0; // Reset combo if no rows/columns were completed in the last play of the round\n                    }\n                    this.getRandomShapes();\n                }\n\n                this.gameOver = this.checkGameOver();\n                \n                this.saveState(); // Save the current state before adding the shape\n            }, 500);\n        },\n        checkCollision(shape, row, col) {\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        if (this.board[row + i] === undefined || this.board[row + i][col + j] === undefined || this.board[row + i][col + j] !== null) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        },\n        checkRows() {\n            let rowPositions = [];\n            for (let i = 0; i < this.board.length; i++) {\n                if (this.board[i].every(block => block !== null)) {\n                    rowPositions.push(i);\n                    this.board[i].forEach((block, index) => {\n                        setTimeout(() => {\n                            this.board[i].splice(index, 1, null);\n                        }, index * 10);\n                    });\n                }\n            }\n            return { completedRows: rowPositions.length, rowPositions };\n        },\n        checkColumns() {\n            let colPositions = [];\n            for (let i = 0; i < this.board[0].length; i++) {\n                if (this.board.every(row => row[i] !== null)) {\n                    this.board.forEach((block, index) => {\n                        setTimeout(() => {\n                            this.board[index].splice(i, 1, null);\n                        }, index * 10);\n                    });\n                    colPositions.push(i);\n                }\n            }\n            return { completedColumns: colPositions.length, colPositions };\n        },\n        checkGameOver() {\n            //the game is over when there is no space available for the next shape\n            for (let shape of this.currentShapes) {\n                for (let row = 0; row <= this.board.length - this.shapes[shape].length; row++) {\n                    for (let col = 0; col <= this.board[0].length - this.shapes[shape][0].length; col++) {\n                        if (!this.checkCollision(this.shapes[shape], row, col)) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n        handleShapeClicked(event) {\n            this.selectedShape = event.name; // get the shape name from event\n            this.selectedShapeColor = event.color; // store color for future use\n        },\n        handleShapeDragged(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.updateHoverCells(this.shapes[this.selectedShape], row, col);\n        },\n        handleShapeDropped(event) {\n            const offsetX = parseFloat(event.offsetX);\n            const offsetY = parseFloat(event.offsetY);\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n\n            this.addShape(this.shapes[this.selectedShape], row, col);\n            this.clearHoverCells();\n        },\n        handleDrop(event) {\n            const name = event.dataTransfer.getData('name');\n            if (!name) return;\n            const offsetX = parseFloat(event.dataTransfer.getData('offsetX'));\n            const offsetY = parseFloat(event.dataTransfer.getData('offsetY'));\n            const boardRect = this.$refs.gameBoard.$el.getBoundingClientRect();\n            const dropX = event.clientX - boardRect.left - offsetX;\n            const dropY = event.clientY - boardRect.top - offsetY;\n            const row = Math.floor(dropY / 40); // Using dropY for row calculation\n            const col = Math.floor(dropX / 40); // Using dropX for column calculation\n            this.addShape(this.shapes[name], row, col);\n            this.clearHoverCells();\n        },\n        removeShape(name) {\n            const index = this.currentShapes.indexOf(name);\n            if (index > -1) {\n                this.currentShapes.splice(index, 1);\n            }\n        },\n        getRandomShapes() {\n            //select 3 random shapes from the shapes object and add to the currentShapes array the shapes can be repeated\n            this.currentShapes = Array.from({ length: 3 }, () => {\n                return this.selectedShapes[Math.floor(Math.random() * this.selectedShapes.length)];\n            });\n\n            if (this.checkGameOver()) {\n                this.getRandomShapes();\n            }\n\n            this.rowsOrColumnsCompleted = false; // Reset for the new round\n        },\n        applyCellStyle(block) {\n            if (block !== null) {\n                return {\n                    background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n                };\n            }\n            return {};\n        },\n        updateHoverCells(shape, row, col) {\n            this.hoverCells = [];\n            if (this.checkCollision(shape, row, col))\n                return;\n            for (let i = 0; i < shape.length; i++) {\n                for (let j = 0; j < shape[i].length; j++) {\n                    if (shape[i][j] === 1) {\n                        this.hoverCells.push({ row: row + i, col: col + j });\n                    }\n                }\n            }\n        },\n        clearHoverCells() {\n            this.hoverCells = [];\n        },\n        isHoverCell(row, col) {\n            return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n        },\n        saveHistory() {\n            this.history.push({\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes))\n            });\n        },\n        saveState() {\n            // Save the current state of the board and the score\n            const state = {\n                board: JSON.parse(JSON.stringify(this.board)),\n                score: this.score,\n                currentShapes: JSON.parse(JSON.stringify(this.currentShapes)),\n                selectedShape: this.selectedShape,\n                selectedShapeColor: this.selectedShapeColor,\n                history: JSON.parse(JSON.stringify(this.history)),\n                selectedShapes: this.selectedShapes,\n                highScore: this.highScore,\n                combo: this.combo,\n                rowsOrColumnsCompleted: this.rowsOrColumnsCompleted\n            };\n            localStorage.setItem('gameState', JSON.stringify(state));\n        },\n        undoMove() {\n            if (this.history.length > 0) {\n                const previousState = this.history.pop();\n                this.board = previousState.board;\n                this.score = previousState.score;\n                this.currentShapes = previousState.currentShapes;\n                this.gameOver = false;\n                this.combo = previousState.combo;\n                this.rowsOrColumnsCompleted = previousState.rowsOrColumnsCompleted;\n            }\n        },\n        openCustomPieceCreator() {\n            this.isCustomPieceCreatorVisible = true;\n        },\n        handleCustomPieceSave(grid) {\n            this.isCustomPieceCreatorVisible = false;\n            const customShape = grid.map(row => row.map(cell => (cell ? 1 : 0)));\n            this.shapes.custom = customShape;\n            this.currentShapes.push('custom');\n            this.saveState();\n        },\n        handleCustomPieceCancel() {\n            this.isCustomPieceCreatorVisible = false;\n        },\n        openSelectShapes() {\n            this.isSelectShapesVisible = true;\n        },\n        handleSelectShapesSave(selectedShapes) {\n            this.isSelectShapesVisible = false;\n            this.selectedShapes = selectedShapes;\n            this.getRandomShapes();\n            this.saveState(); \n        },\n        handleSelectShapesCancel() {\n            this.isSelectShapesVisible = false;\n        },\n        showScoreAnimation(points, row, col, isRow) {\n            const animation = {\n                points,\n                row,\n                col,\n                isRow,\n                id: Date.now() // Unique ID for each animation\n            };\n            this.scoreAnimations.push(animation);\n            setTimeout(() => {\n                this.scoreAnimations = this.scoreAnimations.filter(anim => anim.id !== animation.id);\n            }, 2000); // Duration of the animation\n        },\n        getAnimationStyle(animation) {\n            const size = 40; // Assuming each cell is 40x40 pixels\n            const top = animation.isRow ? ((animation.row) * size) + (size / 2) : size * 5;\n            const left = animation.isRow ? size * 5 : ((animation.col + 1)  * size) + (size / 2);\n            return {\n                top: `${top}px`,\n                left: `${left}px`,\n                transition: 'transform 0.5s, opacity 0.5s',\n                opacity: 1,\n            };\n        },\n    },\n    mounted() {\n\n        const savedGameState = localStorage.getItem('gameState');\n        if (savedGameState) {\n            const state = JSON.parse(savedGameState);\n            this.board = state.board;\n            this.score = state.score;\n            this.currentShapes = state.currentShapes;\n            this.selectedShape = state.selectedShape;\n            this.selectedShapeColor = state.selectedShapeColor;\n            this.history = state.history;\n            this.selectedShapes = state.selectedShapes;\n            this.highScore = state.highScore;\n            this.combo = state.combo;\n            this.rowsOrColumnsCompleted = state.rowsOrColumnsCompleted;\n        } else {\n            this.selectedShapes = Object.keys(this.shapes);\n            this.resetBoard();\n        }\n\n    }\n}\n</script>\n","<template>\n  <div class=\"score-board\">\n    <div class=\"high-score\">High Score: {{ highScore }}</div>\n    <div class=\"score\" :class=\"{ highlight: isHighScoreAnimated }\">{{ scoreDisplay }}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScoreBoard',\n  props: {\n    highScore: {\n      type: Number,\n      required: true\n    },\n    scoreDisplay: {\n      type: Number,\n      required: true\n    },\n    isHighScoreAnimated: {\n      type: Boolean,\n      required: true\n    }\n  }\n};\n</script>\n ","import { render } from \"./ScoreBoard.vue?vue&type=template&id=e55e7eee\"\nimport script from \"./ScoreBoard.vue?vue&type=script&lang=js\"\nexport * from \"./ScoreBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid\" @dragover.prevent=\"handleDragOver\" @drop=\"handleDrop\" ref=\"gameBoard\">\n    <div class=\"row\" v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\">\n      <div class=\"cell\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"\n           :class=\"{ 'filled-cell': block, 'hover-cell': isHoverCell(rowIndex, blockIndex) }\"\n           :style=\"applyCellStyle(block)\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameGrid',\n  props: {\n    board: {\n      type: Array,\n      required: true\n    },\n    hoverCells: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleDragOver(event) {\n      this.$emit('dragover', event);\n    },\n    handleDrop(event) {\n      this.$emit('drop', event);\n    },\n    isHoverCell(row, col) {\n      return this.hoverCells.some(cell => cell.row === row && cell.col === col);\n    },\n    applyCellStyle(block) {\n      if (block !== null) {\n        return {\n          background: `linear-gradient(145deg, ${block}, ${block} 50%, ${block} 50%, ${block} 100%)`,\n        };\n      }\n      return {};\n    }\n  }\n};\n</script>\n","import { render } from \"./GameGrid.vue?vue&type=template&id=0666ae44\"\nimport script from \"./GameGrid.vue?vue&type=script&lang=js\"\nexport * from \"./GameGrid.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"shape-selection\">\n    <div v-for=\"(shape, index) in currentShapes\" :key=\"index\">\n      <Block :shape=\"shapes[shape]\" :name=\"shape\" :index=\"index\" @shapeClicked=\"handleShapeClicked\"\n             @shapeDragged=\"handleShapeDragged\" @shapeDropped=\"handleShapeDropped\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'ShapeSelection',\n  components: { Block },\n  props: {\n    shapes: {\n      type: Object,\n      required: true\n    },\n    currentShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    handleShapeClicked(event) {\n      this.$emit('shapeClicked', event);\n    },\n    handleShapeDragged(event) {\n      this.$emit('shapeDragged', event);\n    },\n    handleShapeDropped(event) {\n      this.$emit('shapeDropped', event);\n    }\n  }\n};\n</script>","<template>\n  <div class=\"shape\" \n       @mousedown=\"handleMouseDown\" \n       @dragstart=\"handleDragStart\" \n       @dragend=\"handleDragEnd\"\n       @touchstart=\"handleTouchStart\"\n       @touchmove=\"handleTouchMove\"\n       @touchend=\"handleTouchEnd\"\n       :style=\"shapeStyle\"\n       draggable=\"true\"\n       >\n      <div class=\"row\" v-for=\"(row, rowIndex) in shape\" :key=\"rowIndex\">\n          <div class=\"block\" :class=\"{'fill': applyStyles(rowIndex, blockIndex), 'dragging': isDragging}\" v-for=\"(block, blockIndex) in row\" :key=\"blockIndex\"  :style=\"applyStyles(rowIndex, blockIndex)\">\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport './Block.css';\n\nexport default {\n  name: 'BlockComponent',\n  props: {\n    name: {\n      type: String,\n      required: false,\n      default: 'Block'\n    },\n    shape: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    },\n    disableDragging: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      blockStyle: {},\n      offsetX: 0,\n      offsetY: 0,\n      touchCurrentX: 0,\n      touchCurrentY: 0,\n      isDragging: false,\n      color: this.getRandomColor(),\n    };\n  },\n  computed: {\n    shapeStyle() {\n      if (this.isDragging) {\n        return {\n          position: 'absolute',\n          left: `${this.touchCurrentX}px`,\n          top: `${this.touchCurrentY}px`,\n          zIndex: 1000,\n        };\n      }\n      return {};\n    }\n  },\n  methods: {\n    applyStyles(rowIndex, blockIndex) {\n      if (!this.shape) return;\n      if(this.shape[rowIndex][blockIndex]) {\n        return {\n          background: `linear-gradient(145deg, ${this.color}, ${this.color} 50%, ${this.color} 50%, ${this.color} 100%)`,\n        }\n      }\n    },\n    handleMouseDown() {\n      if (this.disableDragging) return;\n      this.$emit('shapeClicked', {name: this.name, color: this.color});\n    },\n    handleDragStart(event) {\n      if (this.disableDragging) return;\n      event.dataTransfer.setData('name', this.name);\n      const rect = event.target.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const offsetY = event.clientY - rect.top;\n      event.dataTransfer.setData('offsetX', offsetX);\n      event.dataTransfer.setData('offsetY', offsetY);\n    },\n    handleTouchStart(event) {\n      if (this.disableDragging) return;\n      event.preventDefault();\n      const rect = event.target.parentElement.getBoundingClientRect();\n      this.offsetX = event.touches[0].clientX - rect.left;\n      this.offsetY = event.touches[0].clientY - rect.top;\n\n      this.touchCurrentX = event.touches[0].clientX - this.offsetX;\n      this.touchCurrentY = (event.touches[0].clientY - this.offsetY) - this.shape.length * 90;\n\n      this.isDragging = true;\n      this.$emit('shapeClicked', {name: this.name, color: this.color});\n    },\n    handleTouchMove(event) {\n      if (this.disableDragging) return;\n      const touch = event.touches[0];\n      this.touchCurrentX = touch.clientX - this.offsetX;\n      this.touchCurrentY = (touch.clientY - this.offsetY) - this.shape.length * 90;\n      this.$emit('shapeDragged', { name: this.name, clientX: touch.clientX, clientY: (touch.clientY - this.offsetY) - this.shape.length * 90, offsetX: this.offsetX, offsetY: this.offsetY });\n    },\n    handleTouchEnd(event) {\n      if (this.disableDragging) return;\n      this.isDragging = false;\n      const touch = event.changedTouches[0];\n      this.$emit('shapeDropped', { name: this.name, clientX: touch.clientX, clientY: touch.clientY - (this.shape.length * 90), offsetX: this.offsetX, offsetY: this.offsetY});\n    },\n    getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    },\n  },\n}\n</script>\n","import { render } from \"./Block.vue?vue&type=template&id=98be5634\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ShapeSelection.vue?vue&type=template&id=bb50a84c\"\nimport script from \"./ShapeSelection.vue?vue&type=script&lang=js\"\nexport * from \"./ShapeSelection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"custom-piece-overlay\" v-if=\"visible\">\n    <div class=\"custom-piece-overlay-content\">\n      <h2>Create Your Custom Piece</h2>\n      <div class=\"custom-piece-grid\">\n        <div class=\"custom-piece-row\" v-for=\"(row, rowIndex) in piece\" :key=\"rowIndex\">\n          <div class=\"custom-piece-cell\" v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\"\n               :class=\"{ 'filled': cell }\"\n               @click=\"toggleCell(rowIndex, cellIndex)\">\n          </div>\n        </div>\n      </div>\n      <div class=\"custom-piece-controls\">\n        <button class=\"custom-piece-button\" @click=\"savePiece\" :disabled=\"blockCount > 6\">Save</button>\n        <button class=\"custom-piece-button\" @click=\"cancel\">Cancel</button>\n      </div>\n      <p>Blocks: {{ blockCount }} / 6</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport './CustomPieceCreator.css';\nexport default {\n  name: 'CustomPieceCreator',\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      piece: Array.from({ length: 4 }, () => Array(4).fill(0))\n    };\n  },\n  computed: {\n    blockCount() {\n      return this.piece.flat().filter(cell => cell === 1).length;\n    }\n  },\n  methods: {\n    toggleCell(row, col) {\n      if (this.piece[row][col] === 1) {\n        this.piece[row][col] = 0;\n      } else if (this.blockCount < 6) {\n        this.piece[row][col] = 1;\n      }\n    },\n    savePiece() {\n      this.$emit('save', this.piece);\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>","import { render } from \"./CustomPieceCreator.vue?vue&type=template&id=618b4f1e\"\nimport script from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\nexport * from \"./CustomPieceCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"select-shapes-overlay\" v-if=\"visible\">\n    <div class=\"select-shapes-content\">\n      <div class=\"select-shapes-grid\">\n        <div\n          class=\"select-shapes-cell\"\n          v-for=\"(shape, shapeName) in shapes\"\n          :key=\"shapeName\"\n          :class=\"{ selected: selectedShapes.includes(shapeName) }\"\n          @click=\"toggleShapeSelection(shapeName)\"\n        >\n          <Block :shape=\"shape\" :name=\"shapeName\" :disableDragging=\"true\" />\n        </div>\n      </div>\n      <div class=\"select-shapes-controls\">\n        <button class=\"select-shapes-button\" @click=\"saveSelection\">Save</button>\n        <button class=\"select-shapes-button\" @click=\"cancelSelection\">Cancel</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Block from './Block.vue';\n\nexport default {\n  name: 'SelectShapes',\n  components: { Block },\n  props: {\n    visible: {\n      type: Boolean,\n      required: true\n    },\n    shapes: {\n      type: Object,\n      required: true\n    },\n    initialSelectedShapes: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedShapes: []\n    };\n  },\n  watch: {\n    initialSelectedShapes: {\n      immediate: true,\n      handler(newVal) {\n        this.selectedShapes = [...newVal];\n      }\n    }\n  },\n  methods: {\n    toggleShapeSelection(shapeName) {\n      const index = this.selectedShapes.indexOf(shapeName);\n      if (index > -1) {\n        this.selectedShapes.splice(index, 1);\n      } else {\n        this.selectedShapes.push(shapeName);\n      }\n    },\n    saveSelection() {\n      this.$emit('save', this.selectedShapes);\n    },\n    cancelSelection() {\n      this.$emit('cancel');\n    }\n  }\n};\n</script>\n\n<style>\n.select-shapes-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.select-shapes-content {\n  background: linear-gradient(to bottom, #4358ad, #2c3e75);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  width: 90%;\n  max-width: 600px;\n}\n\n.select-shapes-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  margin-bottom: 20px;\n  max-height: 70vh;\n  overflow-y: auto;\n}\n\n.select-shapes-cell {\n  background: #333;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.select-shapes-cell.selected {\n  background: #ff0;\n}\n\n.select-shapes-controls {\n  display: flex;\n  justify-content: space-between;\n}\n\n.select-shapes-button {\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #232b54;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  color: #fff;\n  font-weight: bold;\n}\n\n.select-shapes-button:hover {\n  background-color: #1e264a;\n}\n</style>","import { render } from \"./SelectShapes.vue?vue&type=template&id=86021f54\"\nimport script from \"./SelectShapes.vue?vue&type=script&lang=js\"\nexport * from \"./SelectShapes.vue?vue&type=script&lang=js\"\n\nimport \"./SelectShapes.vue?vue&type=style&index=0&id=86021f54&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./GameBoard.vue?vue&type=template&id=722c1d2a\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=42da9d62\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=42da9d62&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblock_blast\"] = self[\"webpackChunkblock_blast\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3718); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_GameBoard","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","combo","_createVNode","_component_ScoreBoard","highScore","scoreDisplay","isHighScoreAnimated","_hoisted_3","_component_GameGrid","board","hoverCells","onDragover","_ctx","handleDragOver","onDrop","$options","handleDrop","ref","_Fragment","_renderList","scoreAnimations","animation","id","style","_normalizeStyle","getAnimationStyle","points","_component_ShapeSelection","shapes","currentShapes","onShapeClicked","handleShapeClicked","onShapeDragged","handleShapeDragged","onShapeDropped","handleShapeDropped","gameOver","_hoisted_4","onClick","_cache","args","resetBoard","history","length","undoMove","_createCommentVNode","openCustomPieceCreator","openSelectShapes","_component_CustomPieceCreator","visible","isCustomPieceCreatorVisible","onSave","handleCustomPieceSave","onCancel","handleCustomPieceCancel","_component_SelectShapes","isSelectShapesVisible","initialSelectedShapes","selectedShapes","handleSelectShapesSave","handleSelectShapesCancel","$props","_normalizeClass","highlight","name","props","type","Number","required","Boolean","__exports__","_withModifiers","row","rowIndex","block","blockIndex","isHoverCell","applyCellStyle","Array","methods","event","this","$emit","col","some","cell","background","shape","index","_component_Block","onMousedown","handleMouseDown","onDragstart","handleDragStart","onDragend","handleDragEnd","onTouchstart","handleTouchStart","onTouchmove","handleTouchMove","onTouchend","handleTouchEnd","shapeStyle","draggable","applyStyles","isDragging","String","default","disableDragging","data","blockStyle","offsetX","offsetY","touchCurrentX","touchCurrentY","color","getRandomColor","computed","position","left","top","zIndex","dataTransfer","setData","rect","target","getBoundingClientRect","clientX","clientY","preventDefault","parentElement","touches","touch","changedTouches","letters","i","Math","floor","random","components","Block","Object","piece","cellIndex","$event","toggleCell","_hoisted_5","savePiece","disabled","blockCount","_hoisted_6","cancel","from","fill","flat","filter","shapeName","selected","includes","toggleShapeSelection","saveSelection","cancelSelection","watch","immediate","handler","newVal","indexOf","splice","push","CustomPieceCreator","GameGrid","ScoreBoard","ShapeSelection","SelectShapes","square","line","line2","line3","line4","line5","line6","t","t2","t3","t4","single","l","l2","l3","l4","l5","j","s","z","bCorner","bCorner2","bCorner3","bCorner4","bSquare","rectangle","rectangle2","corner","corner2","corner3","corner4","u","u2","u3","u4","selectedShape","selectedShapeColor","score","rowsOrColumnsCompleted","newValue","oldValue","incrementScoreDisplay","animateHighScore","increment","interval","setInterval","clearInterval","setTimeout","max","getRandomShapes","saveState","addShape","checkCollision","saveHistory","shapeBlocks","removeShape","completedRows","rowPositions","checkRows","completedColumns","colPositions","checkColumns","totalCompleted","rowPoints","colPoints","rowColPoints","multiBonus","comboBonus","totalPoints","showScoreAnimation","checkGameOver","undefined","every","forEach","parseFloat","boardRect","$refs","gameBoard","$el","dropX","dropY","updateHoverCells","clearHoverCells","getData","JSON","parse","stringify","state","localStorage","setItem","previousState","pop","grid","customShape","map","custom","isRow","Date","now","anim","size","transition","opacity","mounted","savedGameState","getItem","keys","GameBoard","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}